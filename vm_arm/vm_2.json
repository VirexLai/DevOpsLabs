{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 11,
            "metadata": {
                "description": "Specify a project name that is used to generate resource names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "virtualNetworks_TestVM_vnet_name": {
            "defaultValue": "[concat(parameters('projectName'), 'vnet')]",
            "type": "String"
        },
        "networkInterfaceName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'ni)]"
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": "true"
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'nsg)]"
        },
        "networkSecurityGroupRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "RDP",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "3389"
                    }
                }
            ]
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'vmsubnet')]"
        },
        "virtualNetworkId": {
            "type": "string",
            "defaultValue": "/subscriptions/daec4827-7402-4d03-a7c9-b48171487bee/resourceGroups/TestRG/providers/Microsoft.Network/virtualNetworks/[concat(parameters('projectName'), 'vnet')]"
        },
        "publicIpAddressName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'pip')]"
        },
        "publicIpAddressType": {
            "type": "string",
            "defaultValue": "Static"
        },
        "publicIpAddressSku": {
            "type": "string",
            "defaultValue": "Standard"
        },
        "pipDeleteOption": {
            "type": "string",
            "defaultValue": "Detach"
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'vm')]"
        },
        "virtualMachineComputerName": {
            "type": "string",
            "defaultValue": "[concat(parameters('projectName'), 'vmname')]"
        },
        "virtualMachineRG": {
            "type": "string",
            "defaultValue": "resourceGroup().name"
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS"
        },
        "osDiskDeleteOption": {
            "type": "string",
            "defaultValue": "Delete"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3"
        },
        "nicDeleteOption": {
            "type": "string",
            "defaultValue": "Detach"
        },
        "hibernationEnabled": {
            "type": "bool",
            "defaultValue": "false"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "VMadmin"
        },
        "adminPassword": {
            "type": "secureString",
            "defaultValue": "AdminP@ssw0rd"
        },
        "patchMode": {
            "type": "string",
            "defaultValue": "AutomaticByOS"
        },
        "enableHotpatching": {
            "type": "bool",
            "defaultValue": "false"
        },
        "securityType": {
            "type": "string",
            "defaultValue": "TrustedLaunch"
        },
        "secureBoot": {
            "type": "bool",
            "defaultValue": "true"
        },
        "vTPM": {
            "type": "bool",
            "defaultValue": "true"
        },
        "autoShutdownStatus": {
            "type": "string",
            "defaultValue": "Enabled"
        },
        "autoShutdownTime": {
            "type": "string",
            "defaultValue": "19:00"
        },
        "autoShutdownTimeZone": {
            "type": "string",
            "defaultValue": "UTC"
        },
        "autoShutdownNotificationStatus": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "autoShutdownNotificationLocale": {
            "type": "string",
            "defaultValue": "zh-hant"
        }
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetId": "[parameters('virtualNetworkId')]",
        "vnetName": "[last(split(variables('vnetId'), '/'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_TestVM_vnet_name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "[concat(parameters('projectName'), 'vmsubnet')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_TestVM_vnet_name'), '[concat(parameters('projectName'), 'vmsubnet')]')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_TestVM_vnet_name'), '/[concat(parameters('projectName'), 'vmsubnet')]')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_TestVM_vnet_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "windows-11",
                        "sku": "win11-22h2-entn",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {
                    "securityType": "[parameters('securityType')]",
                    "uefiSettings": {
                        "secureBootEnabled": "[parameters('secureBoot')]",
                        "vTpmEnabled": "[parameters('vTPM')]"
                    }
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "enableHotpatching": "[parameters('enableHotpatching')]",
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "name": "[concat('shutdown-computevm-', parameters('virtualMachineName'))]",
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "status": "[parameters('autoShutdownStatus')]",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "[parameters('autoShutdownTime')]"
                },
                "timeZoneId": "[parameters('autoShutdownTimeZone')]",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
                "notificationSettings": {
                    "status": "[parameters('autoShutdownNotificationStatus')]",
                    "notificationLocale": "[parameters('autoShutdownNotificationLocale')]",
                    "timeInMinutes": "30"
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
